need a public git repo

To mirror a public repo
Need a github account
create a github personal access token - in user -> settings -> developer settings - -> Personal access tokens
it needs public_repo
put it in a vault (create one if needed & set a master key) as a secret - remember the name
create a dynamic group to identify  devops services

Dynamic group TGDevoOpsVaultGroup

ALL {resource.type='devopsrepository',resource.compartment.id='ocid1.compartment.oc1..<<mycompartment>>'}

 
now allow the group to access the secret
DG access to secret - do this in the parent compartment

allow dynamic-group TGDevoOpsVaultGroup to read secret-family in compartment <<compartmentNameSecretsExist>>

Create the notifications channel

Create the devops project

Create a git integration in the external connections

Above doesn't seem to work

Setup a devops user group


Create the group MyUsersGroup, assign a user to it



setup policies - my compartment OCID ocid1.compartment.oc1..aaaaaaaac23qko3ji4d2j745sdn5e4vbc5e6pzocv73kubbippqkpyvkdgha

Name it MyDynamicGroup
ALL {resource.type = 'devopsbuildpipeline', resource.compartment.id = 'ReplaceThisTextWithYourCompartmentOCID'}

Name It CodeReposDynamicGroup
ALL {resource.type = 'devopsrepository', resource.compartment.id = 'ReplaceThisTextWithYourCompartmentOCID'}



Allow the user group to do devops stuff
Allow group MyUserGroup to manage devops-family in compartment ReplaceThisTextWithYourCompartmentOCID

Allow the dynamic group of compute resources to do stuff
Allow dynamic-group MyDynamicGroup to manage all-resources in tenancy

policies stuff
https://confluence.oci.oraclecorp.com/pages/viewpage.action?pageId=554345218

make sure you have an auth token USING SSH setup (the PEM one won't work)
create an ssh key pair - in cloud shall use ssh-keygen

to convert an ssh key pair intpo the PEM one required by the auth token
ssh-keygen -f ~/.ssh/id_rsa.pub -e -m pkcs8 | pbcopy

make sure that once you've done that you setup the .ssh/config file like this (note that you drop the oracleidentitycloudservice if not using federation)

Host devops.scmservice.*.oci.oraclecloud.com
  User oracleidentitycloudservice/tim.graves@oracle.com@oraseemeatechse
  IdentityFile ~/.ssh/id_rsa

Create the git repo in the dev ops project

we're going to create our own copy of the repo - this is faster than doign all of the setup to setup an ongoing mirror

https://docs.github.com/en/repositories/creating-and-managing-repositories/duplicating-a-repository

Clone your source repo into a directory (use githib to get the clone command of the remo)

get the ssh clone path (it says it's read only, ignore that for now)

Add the git as a new remote
 git remote add devops ssh://devops.scmservice.eu-frankfurt-1.oci.oraclecloud.com/namespaces/oraseemeatechse/projects/DevOpsLab/repositories/cloudnative-helidon-storefront
 
 Push the git repo - lot's of output, numbers may vary
git push devops
Enumerating objects: 97, done.
Counting objects: 100% (97/97), done.
Delta compression using up to 16 threads
Compressing objects: 100% (86/86), done.
Writing objects: 100% (97/97), 43.58 KiB | 4.84 MiB/s, done.
Total 97 (delta 20), reused 20 (delta 4)
remote: Resolving deltas: 100% (20/20)
To ssh://devops.scmservice.eu-frankfurt-1.oci.oraclecloud.com/namespaces/oraseemeatechse/projects/DevOpsLab/repositories/cloudnative-helidon-storefront
 * [new branch]      initial-code-added -> initial-code-added

 can go look at it in the repo now if you want
 
 This command gets the version info from the status resource
 grep "VERSION = " /Users/tg13456/Development/cloudnative-helidon-storefront/helidon-storefront-full/src/main/java/com/oracle/labs/helidon/storefront/resources/StatusResource.java  | awk '{print $7}' | sed -e 's/"//g' -e s'/;//'
 
start creating a build pipeline

devops variable ${OCI_PRIMARY_SOURCE_DIR} is the location the primary git repo is downloaded to
foor the cloudnative-helidon-storefront this means that build spec is in ${OCI_PRIMARY_SOURCE_DIR}/yaml/build/build_spec.yaml
